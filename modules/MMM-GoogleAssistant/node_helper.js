const exec=require("child_process").exec,fs=require("fs"),path=require("path"),Assistant=require("./components/assistant.js"),ScreenParser=require("./components/screenParser.js"),{getPlatform:getPlatform}=require("./components/platform.js");logGA=(...e)=>{};var NodeHelper=require("node_helper");module.exports=NodeHelper.create({start:function(){this.config={},this.blank={},this.checkConfigMerge(),this.PLATFORM_RECORDER=new Map,this.PLATFORM_RECORDER.set("linux","arecord"),this.PLATFORM_RECORDER.set("mac","sox"),this.PLATFORM_RECORDER.set("raspberry-pi","arecord"),this.PLATFORM_RECORDER.set("windows","sox")},socketNotificationReceived:function(e,o){switch(e){case"INIT":console.log("[GA] MMM-GoogleAssistant Version:",require("./package.json").version,"rev:",require("./package.json").rev),this.initialize(o);break;case"ACTIVATE_ASSISTANT":this.activateAssistant(o);break;case"SHELLEXEC":var s=o.command;if(!s)return console.log("[GA] ShellExec: no command to execute!");s+=o.options?" "+o.options:"",exec(s,((e,t,i)=>{logGA("ShellExec command:",s),e&&(console.log("[GA] ShellExec Error:"+e),this.sendSocketNotification("WARNING",{message:"ShellExecError"})),logGA("SHELLEXEC_RESULT",{executed:o,result:{error:e,stdOut:t,stdErr:i}})}))}},tunnel:function(e){this.sendSocketNotification("TUNNEL",e)},activateAssistant:function(e){logGA("ASSISTANT_QUERY:",e);var o=Object.assign({},this.config.assistantConfig);o.debug=this.config.debug,o.lang=e.lang,o.micConfig=this.config.micConfig,this.assistant=new Assistant(o,(e=>{this.tunnel(e)}));var s={responseOutputCSS:this.config.responseConfig.responseOutputCSS,responseOutputURI:"tmp/responseOutput.html",responseOutputZoom:this.config.responseConfig.zoom.responseOutput},t=new ScreenParser(s,this.config.debug);this.assistant.activate(e,(o=>{o.lastQuery=e,o.screen||o.audio||(o.audio||o.screen||o.text||(o.error.error="NO_RESPONSE"),o.transcription&&o.transcription.transcription&&!o.transcription.done&&(o.error.error="TRANSCRIPTION_FAILS")),o&&o.error.audio&&!o.error.message&&(o.error.error="TOO_SHORT"),o.screen?t.parse(o,(e=>{delete e.screen.originalContent,logGA("ASSISTANT_RESULT",e),this.sendSocketNotification("ASSISTANT_RESULT",e)})):(logGA("ASSISTANT_RESULT",o),this.sendSocketNotification("ASSISTANT_RESULT",o))}))},checkConfigMerge:function(){console.log("[GA] Read config.js and check ConfigDeepMerge...");let e=path.resolve(__dirname,"../../config/config.js");fs.existsSync(e)&&(MMConfig=require(e));let o=MMConfig.modules.find((e=>"MMM-GoogleAssistant"==e.module));o.configDeepMerge||(console.error("[FATAL] MMM-GoogleAssistant Module Configuration Error: ConfigDeepMerge is not actived !"),console.error("[GA] Please review your MagicMirror config.js file!"),process.exit(1)),console.log("[GA] Perfect ConfigDeepMerge activated!"),o.dev&&(this.blank.dev=!0,console.log("[GA] Hi, developer!"))},initialize:async function(e){this.config=e,this.config.assistantConfig.modulePath=__dirname;var o=null;this.config.debug&&(logGA=(...e)=>{console.log("[GA]",...e)});let s,t={version:require("./package.json").version,rev:require("./package.json").rev};if(!fs.existsSync(this.config.assistantConfig.modulePath+"/credentials.json"))return o="[FATAL] Assistant: credentials.json file not found !",this.DisplayError(o,{message:"GAErrorCredentials"});if(!fs.existsSync(this.config.assistantConfig.modulePath+"/tokenGA.json"))return o="[FATAL] Assistant: tokenGA.json file not found !",this.DisplayError(o,{message:"GAErrorTokenGA"});try{s=getPlatform()}catch(o){return console.error("[GA] Google Assistant does not support this platform. Supported platforms include macOS (x86_64), Windows (x86_64), Linux (x86_64), and Raspberry Pi"),void process.exit(1)}let i=this.PLATFORM_RECORDER.get(s);console.log(`[GA] Platform: '${s}'; attempting to use '${i}' to access microphone ...`),this.config.micConfig.recorder=i,this.loadRecipes((()=>this.sendSocketNotification("INITIALIZED",t))),console.log("[GA] Google Assistant is initialized.")},loadRecipes:function(e=(()=>{})){if(this.config.recipes){let r=(e,o)=>"function"==typeof o?"__FUNC__"+o.toString():o;for(var o=this.config.recipes,s=null,t=0;t<o.length;t++)try{var i=require("./recipes/"+o[t]).recipe;this.sendSocketNotification("LOAD_RECIPE",JSON.stringify(i,r,2)),console.log("[GA] RECIPE_LOADED:",o[t])}catch(e){return s=`[FATAL] RECIPE_ERROR (${o[t]})`,this.DisplayError(s,{message:"GAErrorRecipe",values:o[t]},e)}e()}else logGA("NO_RECIPE_TO_LOAD"),e()},DisplayError:function(e,o,s=null){return s?console.log("[GA][ERROR]"+e,s.message,s):console.log("[GA][ERROR]"+e),this.sendSocketNotification("NOT_INITIALIZED",{message:o.message,values:o.values})}});